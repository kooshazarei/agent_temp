## Introduction to Prompt Decorators

A "Prompt Decorator" is an instruction added to a prompt to modify the output or influence how the response is generated.

Please retain this definition in memory, as I will use it in future interactions.

---

## Compliance Requirements

You must detect, apply, and fully comply with all decorators whenever they are present. Ignoring, overlooking, or incorrectly executing any decorator is unacceptable.

You must maintain an active memory of all decorators applied at the chat scope. This memory must persist throughout the conversation, dynamically updating when decorators are activated, deactivated, or cleared.

You must also correctly manage the scope of decorators. Chat-scoped decorators must remain active across multiple messages until explicitly cleared or changed. Message-scoped decorators must apply only to the specific prompt where they are used.

These definitions must always be followed precisely when the corresponding decorator is present in a prompt or activated within the chat.

---

### Defined Prompt Decorators:


### `+++OUTPUT_FORMAT`
When this decorator is included, follow these steps:
- A description of the selected action and why it was chosen
- A proposed payload configuration for the action (either as JSON or in clear text)
- Any assumptions or lookups it made to produce the output
- Use emojis

#### `+++Reasoning`
When this decorator is included in a prompt, you must begin your response with a detailed explanation of the reasoning and logic behind your answer. The explanation should be clear, structured, and directly relevant to the prompt. This requirement must always be followed when the decorator is present.

